{"version":3,"sources":["store/reducers.js","store/constants.js","store/index.js","views/MinMax/index.js","views/RandomNumbers/RandomNumbers.js","store/selectors.js","views/RandomNumbers/RandomNumbersContainer.js","store/actions.js","App.js","index.js"],"names":["initialState","data","reducer","state","arguments","length","undefined","action","type","randomNumbers","store","createStore","devToolsEnhancer","MinMax","props","react_default","a","createElement","className","title","value","RandomNumbers","sortType","generated","handleChange","event","_this","setState","target","onSelectChange","generateNumbers","preventDefault","randomNumber","Math","floor","random","find","push","number","message","addNumbersToState","getDataTomap","_this$props","randomNumbersAsc","randomNumbersDesc","downloadNumbers","phoneNumbers","map","phoneNumber","blob","Blob","FileSaver","saveAs","displayNumbers","key","clearList","clearRandomNumbers","_this$state","this","_this$props2","maximumNumber","minimumNumber","Fragment","onSubmit","placeholder","onChange","onClick","views_MinMax","concat","Component","getRandomNumbers","sortPhoneNumbersAsc","orderBy","sortPhoneNumbersDesc","getMaxNumber","max","maxBy","getMinNumber","min","minBy","connect","dispatch","App","es","RandomNumbersContainer","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.87006137.chunk.js","sourcesContent":["import {\n  ADD_NUMBERS_TO_STATE,\n  CLEAR_STATE\n} from \"./constants\";\n\nexport const initialState = {\n  data: []\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_NUMBERS_TO_STATE:\n      return {\n        data: action.randomNumbers\n      };\n    case CLEAR_STATE:\n      return {\n        data: []\n      }\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","export const ADD_NUMBERS_TO_STATE = 'ADD_NUMBERS_TO_STATE'\nexport const CLEAR_STATE = 'CLEAR_STATE'","import { createStore } from \"redux\";\nimport reducer from \"./reducers\";\nimport { devToolsEnhancer } from \"redux-devtools-extension\";\n\nconst store = createStore(reducer, /* preloadedState, */ devToolsEnhancer());\n\nexport default store;\n","import React from \"react\";\nimport './Styles.css'\n\nconst MinMax = props => {\n  return (\n    <div className=\"min-max-card\">\n      <div className=\"min-max-card-title\">{props.title}</div>\n      <div className=\"min-max-value\">{props.value}</div>\n    </div>\n  );\n};\n\nexport default MinMax\n","import React, { Component } from \"react\";\nimport MinMax from \"../MinMax\";\nimport FileSaver from \"file-saver\";\nimport find from \"lodash/find\";\nimport \"./Styles.css\";\n\nclass RandomNumbers extends Component {\n  state = {\n    value: \"\",\n    sortType: \"\",\n    generated: false\n  };\n\n  handleChange = event => {\n    this.setState({ value: event.target.value });\n  };\n\n  onSelectChange = event => {\n    this.setState({ sortType: event.target.value });\n  };\n\n  generateNumbers = event => {\n    event.preventDefault();\n    const { value } = this.state;\n    let randomNumbers = [];\n\n    if (value < 8001) {\n      while (value > randomNumbers.length) {\n        const randomNumber = Math.floor(Math.random() * 90000) + 1000000;\n\n        !find(randomNumbers, [\"number\", randomNumber]) &&\n          randomNumbers.push({ number: randomNumber });\n      }\n\n      this.setState({\n        generated: true,\n        message: \"\"\n      });\n\n      this.props.addNumbersToState(randomNumbers);\n    } else {\n      this.setState({\n        message: \"Number exceeds the maximum allowed\"\n      });\n    }\n  };\n\n  getDataTomap = () => {\n    const { sortType } = this.state;\n    const { randomNumbers, randomNumbersAsc, randomNumbersDesc } = this.props;\n\n    return sortType === \"asc\"\n      ? randomNumbersAsc\n      : sortType === \"desc\"\n      ? randomNumbersDesc\n      : randomNumbers;\n  };\n\n  downloadNumbers = () => {\n    const dataToMap = this.getDataTomap();\n    const phoneNumbers = dataToMap.map(phoneNumber => phoneNumber.number);\n    const blob = new Blob([phoneNumbers], { type: \"text/plain;charset=utf-8\" });\n    FileSaver.saveAs(blob, \"phoneNumbers.txt\");\n  };\n\n  displayNumbers = () => {\n    const dataToMap = this.getDataTomap();\n\n    return dataToMap.map(data => (\n      <div key={data.number} className=\"listItem\">\n        080{data.number}\n      </div>\n    ));\n  };\n\n  clearList = () => {\n    this.setState({\n      generated: false,\n      value: \"\",\n      sortType: \"\"\n    });\n\n    this.props.clearRandomNumbers();\n  };\n\n  render() {\n    const { value, sortType, generated, message } = this.state;\n    const { maximumNumber, minimumNumber } = this.props;\n    return (\n      <React.Fragment>\n        <div className=\"header\">\n          <h1>RANDOM PHONE NUMBER GENERATOR</h1>\n        </div>\n        <div className=\"wrap\">\n          <div className=\"display-left\">\n            <div className=\"title-text\">Enter Number (Max allowed - 8000)</div>\n            <form className=\"input-form\" onSubmit={this.generateNumbers}>\n              <input\n                type=\"number\"\n                value={value}\n                placeholder={\"Enter a number\"}\n                onChange={this.handleChange}\n              />\n              <input type=\"submit\" value=\"Generate Numbers\" />\n              <button className=\"clear-button\" onClick={this.clearList}>\n                Clear\n              </button>\n            </form>\n            <MinMax\n              title={\"Min Number\"}\n              value={minimumNumber && `080${minimumNumber}`}\n            />\n            <MinMax\n              title={\"Max Number\"}\n              value={maximumNumber && `080${maximumNumber}`}\n            />\n          </div>\n          <div className=\"generated-numbers\">\n            <div className=\"title-text\">\n              Generated Numbers {generated && value ? `(${value})` : \"\"}\n            </div>\n            <select\n              className=\"sort-type\"\n              value={sortType}\n              onChange={this.onSelectChange}\n            >\n              <option value=\"unsorted\">unsorted</option>\n              <option value=\"asc\">ascending</option>\n              <option value=\"desc\">descending</option>\n            </select>\n            <div className=\"display-numbers\">\n              {message ? message : this.displayNumbers()}\n            </div>\n            <div className=\"download-button\">\n              <button className=\"download-btn\" onClick={this.downloadNumbers}>\n                Download Numbers\n              </button>\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default RandomNumbers;\n","import orderBy from \"lodash/orderBy\";\nimport maxBy from 'lodash/maxBy'\nimport minBy from 'lodash/minBy'\n\nexport const getRandomNumbers = state => {\n  const randomNumbers = state.data;\n\n  return randomNumbers;\n};\n\nexport const sortPhoneNumbersAsc = state => {\n  const phoneNumbers = getRandomNumbers(state);\n  const sorted = orderBy(phoneNumbers, ['number'], ['asc']);\n\n  return sorted;\n};\n\nexport const sortPhoneNumbersDesc = state => {\n  const phoneNumbers = getRandomNumbers(state);\n  const sorted = orderBy(phoneNumbers, ['number'], ['desc']);\n\n  return sorted;\n};\n\nexport const getMaxNumber = state => {\n  const phoneNumbers = getRandomNumbers(state);\n  const max = maxBy(phoneNumbers, 'number');\n\n  return max ? max.number : ''\n}\n\nexport const getMinNumber = state => {\n  const phoneNumbers = getRandomNumbers(state);\n  const min = minBy(phoneNumbers, 'number');\n\n  return min ? min.number : ''\n}\n","import { connect } from \"react-redux\";\nimport RandomNumbers from \"./RandomNumbers\";\nimport { addNumbersToState, clearRandomNumbers } from \"../../store/actions\";\nimport {\n  getRandomNumbers,\n  sortPhoneNumbersAsc,\n  sortPhoneNumbersDesc,\n  getMaxNumber,\n  getMinNumber\n} from \"../../store/selectors\";\n\nexport const mapStateToProps = state => ({\n  randomNumbers: getRandomNumbers(state),\n  randomNumbersAsc: sortPhoneNumbersAsc(state),\n  randomNumbersDesc: sortPhoneNumbersDesc(state),\n  maximumNumber: getMaxNumber(state),\n  minimumNumber: getMinNumber(state)\n});\n\nexport const mapDispatchToProps = dispatch => ({\n  addNumbersToState: randomNumbers => {\n    dispatch(addNumbersToState(randomNumbers));\n  },\n  clearRandomNumbers: () => {\n    dispatch(clearRandomNumbers());\n  }\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RandomNumbers);\n","import { ADD_NUMBERS_TO_STATE, CLEAR_STATE } from \"./constants\";\n\nexport const addNumbersToState = (randomNumbers) => ({\n  type: ADD_NUMBERS_TO_STATE,\n  randomNumbers\n})\n\nexport const clearRandomNumbers = () => ({\n  type: CLEAR_STATE,\n})\n","import React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport store from './store/index'\nimport './Styles.css';\nimport RandomNumbersContainer from './views/RandomNumbers/RandomNumbersContainer'\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <RandomNumbersContainer />\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root') || document.createElement('div'),\n);\n"],"sourceRoot":""}